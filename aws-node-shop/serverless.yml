service: aws-node-shop
frameworkVersion: '3'
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  environment:
    PRODUCT_TABLE: "Product-${opt:stage, self:provider.stage}"
    STOCK_TABLE: "Stonk-${opt:stage, self:provider.stage}"
    IMPORT_BUCKET: "importbucket-${opt:stage, self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"
    - Effect: Allow
      Action: 
        - "s3:ListBucket"
        - "s3:PutObject"
        - "s3:GetObject"
        - "s3:DeleteObject"
      Resource: "arn:aws:s3:::${self:provider.environment.IMPORT_BUCKET}/*"
  httpApi:
    cors: true
functions:
  api:
    handler: index.handler
    events:
      - httpApi:
          path: /
          method: get
  getProductsList:
    handler: product-service/getProductsList.getProductsList
    events:
      - httpApi:
          path: /products
          method: get
  getProductsById:
    handler: product-service/getProductsById.getProductsById
    events:
      - httpApi:
          path: /products/{id}
          method: get
  createProduct:
    handler: product-service/createProduct.createProduct
    events:
      - httpApi:
          path: /products
          method: post
  importProductsFile:
    handler: import-service/importProductsFile.importProductsFile
    events:
      - httpApi:
          path: /import
          method: get
  importFileParser: 
    handler: import-service/importFileParser.importFileParser 
    events:
      - s3:
          bucket: ${self:provider.environment.IMPORT_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
          forceDeploy: true
resources:
  Resources:
    ProductTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PRODUCT_TABLE}
    StockTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "product_id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "product_id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.STOCK_TABLE}
